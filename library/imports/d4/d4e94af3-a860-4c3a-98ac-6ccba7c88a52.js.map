{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "//star的X速度和Y速度的比值\r\nvar ratio_bule;\r\nvar ratio_red;\r\nvar ratio_white;\r\n\r\nvar vecX_white;\r\nvar vecY_white;\r\n\r\nvar vecX_bule;\r\nvar vecY_bule;\r\n\r\nvar vecX_red;\r\nvar vecY_red;\r\n\r\nvar starDied = false;\r\nvar juge;\r\nvar waveMng;\r\nvar starType = cc.Enum({\r\n    WHITE:-1,\r\n    BULE:-1,\r\n    RED:-1,\r\n    PURPLE:-1\r\n});\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    \r\n        speed: 4 ,\r\n        \r\n        maxRatio:4,\r\n        \r\n        starType:{\r\n            default: starType.WHITE,\r\n            type:starType\r\n        }\r\n\r\n        \r\n    },\r\n    \r\n    onLoad:function () {\r\n    },\r\n    \r\n    onCollisionEnter:function (other, self) {\r\n        console.log('collision!');\r\n        \r\n        //如果红色流星与墙碰撞则会反弹\r\n        if(other.node.group == 'wall'){\r\n            if(this.starType == starType.RED){\r\n                //X方向速度取反以此反弹\r\n                this.vecX_red *= -1;\r\n            }\r\n        }\r\n        else {\r\n            this.onStarKilled();\r\n        }\r\n    },\r\n    \r\n    //流星的一些初始化\r\n   init (WaveMng) {\r\n        //waveMng = WaveMng;\r\n   },\r\n   \r\n   start () {\r\n       \r\n        //WHITE\r\n        if(this.starType == starType.WHITE){\r\n            //屏幕内X坐标的随机值\r\n            this.randomX = cc.director.getVisibleSize.x * -0.5 * cc.random0To1();\r\n            \r\n            vecX_white = this.node.x - this.randomX;\r\n            vecY_white = this.node.y - cc.director.getVisibleSize.y * - 0.5;\r\n            \r\n            ratio_white = vecY_white / vecX_white * 1.0;\r\n            \r\n            juge = ratio_white/Math.abs(ratio_white);\r\n            \r\n            if(Math.abs(ratio_white) > this.maxRatio)\r\n            {\r\n                //console.log('star\\'s speed is too fast ');\r\n                this.speed = cc.random0To1()*1 + 1;\r\n                \r\n                ratio_white = this.maxRatio*juge;\r\n            }\r\n        }\r\n        \r\n         //BULE\r\n        if(this.starType == starType.BULE){\r\n            \r\n            var heroPos = this.waveMng.player.getPosition();\r\n            \r\n            vecX_bule = this.node.x - heroPos.x;\r\n            vecy_bule = this.node.y - heroPos.y;\r\n            \r\n            //ratio是矢量，因为vecX,vecY都是矢量\r\n            ratio_bule = vecy_bule / (vecX_bule * 1.0);\r\n            //用于判断ratio的正负号\r\n            juge = ratio_bule/Math.abs(ratio_bule);\r\n            \r\n            //如果ratio值过大会导致star的速度极快，所以要限制ratio值\r\n            if(Math.abs(ratio_bule) > this.maxRatio)\r\n            {\r\n                //console.log('star\\'s speed is too fast ');\r\n                this.speed = cc.random0To1()*1 + 1;\r\n                ratio_bule = this.maxRatio*juge;\r\n            }\r\n        }\r\n        \r\n        //RED\r\n        if(this.starType == starType.RED){\r\n            //屏幕外X坐标的随机值\r\n            this.randomX_0 = cc.director.getVisibleSize.x * -1 * 0.5 * cc.random0To1() + 200;   //左\r\n            this.randomX_1 = cc.director.getVisibleSize.x * 0.5 * cc.random0To1() + cc.director.getVisibleSize.x;   //右\r\n            \r\n            //random用来随机流星方向\r\n            var random = cc.random0To1();\r\n            \r\n            if(random > 0.5){\r\n                vecX_red = this.node.x - this.randomX_0;\r\n            }\r\n            else{\r\n                vecX_red = this.node.x - this.randomX_1;\r\n            }\r\n            vecY_red = this.node.y - cc.director.getVisibleSize.y * - 0.5;\r\n            \r\n            ratio_red = vecY_red / (vecX_red * 1.0);\r\n        }\r\n\r\n        //PURPLE\r\n        if(this.starType == starType.PURPLE){\r\n            \r\n        }\r\n        \r\n    },\r\n    \r\n    //流星的AI\r\n    starAI () {\r\n        //white\r\n        if(this.starType == starType.WHITE){\r\n            if (vecX_white >= 0 && vecY_white>=0)\r\n            {\r\n                this.node.x += this.speed * -1;\r\n                this.node.y += this.speed * ratio_white * -1;\r\n            }\r\n            else if(vecX_white >= 0 && vecY_white<0)\r\n            {\r\n                this.node.x += this.speed * -1;    \r\n                this.node.y += this.speed * ratio_white * -1;\r\n            }\r\n            else if(vecX_white < 0 && vecY_white<0)\r\n            {\r\n                this.node.x += this.speed ;    \r\n                this.node.y += this.speed * ratio_white;\r\n            }\r\n            else if(vecX_white < 0 && vecY_white>=0)\r\n            { \r\n                this.node.x += this.speed ;    \r\n                this.node.y += this.speed * ratio_white;\r\n            }\r\n            else{\r\n                this.node.x += this.speed ;    \r\n                this.node.y += this.speed ;\r\n            }\r\n        }\r\n        //bule\r\n        else if(this.starType == starType.BULE){\r\n            if (vecX_bule >= 0 && vecY_bule>=0)\r\n            {\r\n                this.node.x += this.speed * -1;\r\n                this.node.y += this.speed * ratio_bule * -1;\r\n            }\r\n            else if(vecX_bule >= 0 && vecY_bule<0)\r\n            {\r\n                this.node.x += this.speed * -1;    \r\n                this.node.y += this.speed * ratio_bule * -1;\r\n            }\r\n            else if(vecX_bule < 0 && vecY_bule<0)\r\n            {\r\n                this.node.x += this.speed ;    \r\n                this.node.y += this.speed * ratio_bule;\r\n            }\r\n            else if(vecX_bule < 0 && vecY_bule>=0)\r\n            { \r\n                this.node.x += this.speed ;    \r\n                this.node.y += this.speed * ratio_bule;\r\n            }\r\n            else{\r\n                this.node.x += this.speed ;    \r\n                this.node.y += this.speed ;\r\n            }\r\n        }  \r\n        //red\r\n        else if(this.starType == RED){\r\n             if (vecX_bule >= 0 && vecY_bule>=0)\r\n            {\r\n                this.node.x += this.speed * -1;\r\n                this.node.y += this.speed * ratio_bule * -1;\r\n            }\r\n            else if(vecX_bule >= 0 && vecY_bule<0)\r\n            {\r\n                this.node.x += this.speed * -1;    \r\n                this.node.y += this.speed * ratio_bule * -1;\r\n            }\r\n            else if(vecX_bule < 0 && vecY_bule<0)\r\n            {\r\n                this.node.x += this.speed ;    \r\n                this.node.y += this.speed * ratio_bule;\r\n            }\r\n            else if(vecX_bule < 0 && vecY_bule>=0)\r\n            { \r\n                this.node.x += this.speed ;    \r\n                this.node.y += this.speed * ratio_bule;\r\n            }\r\n            else{\r\n                this.node.x += this.speed ;    \r\n                this.node.y += this.speed ;\r\n            }\r\n        }\r\n        else if(this.starType == PURPLE){\r\n            \r\n        }\r\n    },\r\n    \r\n    //流星的状态\r\n    starState () {\r\n      if(this.node.y < -315 ){\r\n          starDied = true;\r\n          this.onStarKilled();\r\n      }\r\n      else  \r\n          starDied = false;\r\n    },\r\n    \r\n    onStarKilled () {\r\n        //消除节点\r\n        this.node.destroy();\r\n        //刷新得分\r\n        this.waveMng.updateScoreDisplay();\r\n        cc.log('killed');   \r\n    },\r\n    \r\n    update (dt){\r\n       //流星的AI\r\n       this.starAI();\r\n       //流星的状态\r\n       //this.starState();\r\n       \r\n    },\r\n    \r\n    \r\n\r\n});\r\n"
  ]
}