{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC;AACpB,QAAI,EAAE,UAAU;AAChB,cAAU,EAAC;AACP,cAAM,EAAE,EAAE,CAAC,MAAM;AACjB,YAAI,EAAE,CAAC;KACV;;AAED,QAAI,EAAA,gBAAG;AACH,YAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,YAAI,CAAC,IAAI,GAAG,EAAE,CAAC;KAClB;;AAED,QAAI,EAAC,gBAAG;AACJ,aAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAC;AAC7B,gBAAI,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,gBAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AACvB,gBAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACtB;AACD,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAE,CAAC,CAAC;KAC7B;;AAED,SAAK,EAAA,iBAAG;AACJ,aAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAC;AAC9B,gBAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC3B,gBAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AACnB,gBAAG,GAAG,CAAC,MAAM,EAAC;AACV,mBAAG,CAAC,MAAM,GAAG,KAAK,CAAC;aACtB;AACD,gBAAG,GAAG,CAAC,MAAM,EAAC;AACV,mBAAG,CAAC,gBAAgB,EAAE,CAAC;aAC1B;SACJ;AACD,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KAC9B;;AAED,WAAO,EAAA,mBAAG;AACN,YAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAC;AACd,cAAE,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;AACxD,mBAAO,IAAI,CAAC;SACf;AACD,YAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,YAAI,GAAG,EAAE;AACL,eAAG,CAAC,MAAM,GAAE,IAAI,CAAC;SACpB;AACD,UAAE,IAAI,CAAC,KAAK,CAAC;AACb,eAAO,GAAG,CAAC;KACd;;AAED,cAAO,iBAAE,GAAG,EAAG;AACX,UAAE,IAAI,CAAC,KAAK,CAAC;AACb,WAAG,CAAC,MAAM,GAAE,KAAK,CAAC;AAClB,YAAG,GAAG,CAAC,MAAM,EAAC;AACV,eAAG,CAAC,gBAAgB,EAAE,CAAC;SAC1B;AACD,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;KAC/B;;CAEJ,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var NodePool = cc.Class({\r\n    name: 'NodePool',\r\n    properties:{\r\n        prefab: cc.Prefab,\r\n        size: 0\r\n    },\r\n\r\n    ctor() {\r\n        this.index = 0;\r\n        this.initList = [];\r\n        this.list = [];\r\n    },\r\n    \r\n    init () {\r\n        for(let i = 0;i < this.size; ++i){\r\n            let obj = cc.instantiate(this.prefab);\r\n            this.initList[i] = obj;\r\n            this.list[i] = obj;\r\n        }\r\n        this.index = this.size -1;\r\n    },\r\n    \r\n    reset() {\r\n        for(let i = 0; i < this.size; ++i){\r\n            let obj = this.initList[i];\r\n            this.list[i] = obj;\r\n            if(obj.active){\r\n                obj.active = false;\r\n            }\r\n            if(obj.parent){\r\n                obj.removeFromParent();\r\n            }\r\n        }\r\n        this.index = this.size - 1;\r\n    },\r\n    \r\n    request() {\r\n        if(this.index < 0){\r\n            cc.log(\"Error: the pool do not have enough free item.\");\r\n            return null;\r\n        }\r\n        let obj = this.list[this.index];\r\n        if( obj ){\r\n            obj.active =true;\r\n        }\r\n        --this.index;\r\n        return obj;\r\n    },\r\n    \r\n    return ( obj ) {\r\n        ++this.index;\r\n        obj.active =false;\r\n        if(obj.parent){\r\n            obj.removeFromParent();\r\n        }\r\n        this.list[this.index] = obj;\r\n    }\r\n    \r\n});\r\n\r\nmodule.exports = NodePool;"
  ]
}